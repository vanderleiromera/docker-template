version: "3.9"

services:
  proxy:
    image: traefik:v2.7
    networks:
      shared:
      private:
      public:
    ports:
      - "80:80"
      - "443:443"
    environment:
      - CF_API_EMAIL=${CF_API_EMAIL}
      - CF_API_KEY=${CF_API_KEY}
      - CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}
      - CF_ZONE_API_TOKEN=${CF_ZONE_API_TOKEN}
    depends_on:
      - dockersocket
    restart: unless-stopped
    privileged: true
    tty: true
    volumes:
      - ./traefik.yml:/etc/traefik/traefik.yml:ro
      - ./config.yml:/etc/traefik/config.yml:ro
      - ./certs:/etc/certs:rw,Z
      - ./acme/acme.json:/acme.json
      - /var/run/docker.sock:/var/run/docker.sock:ro
    #  ACME NOTES
    # mkdir acme, touch acme.json, chmod 600 acme.json
    #
    # Note: when used in docker-compose.yml all dollar signs in the hash need to be doubled for escaping.
    # To create user:password pair, it's possible to use this command:
    # echo $(htpasswd -nB traefik-admin) | sed -e s/\\$/\\$\\$/g
    #
    # Also note that dollar signs should NOT be doubled when they not evaluated (e.g. Ansible docker_container module).
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=inverseproxy_shared"
      - "traefik.http.routers.proxy.rule=Host(`${TRAEFIK_DOMAIN}`) &&
        (PathPrefix(`/api`) || PathPrefix(`/dashboard`))"

      - "traefik.http.middlewares.proxy-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.proxy-redirectscheme.redirectscheme.permanent=true"
      # middleware de autenticação de administrador com autenticação básica HTTP
      #- "traefik.http.middlewares.auth.basicauth.users=${TRAEFIK_USERS_PASS}"
      - "traefik.http.middlewares.auth.basicauth.usersfile=/etc/certs/usersfile"
      - "traefik.http.middlewares.auth.basicauth.removeheader=true"
      # Ativa a compactação gzip
      - "traefik.http.middlewares.def-compress.compress=true"
      - "traefik.http.middlewares.strip.stripprefix.prefixes=/dashboard"
      # TLS origin pull - comentar tls options pra desativar cloudflare ...
      - "traefik.http.routers.proxy.tls.options=default"
      - "traefik.http.routers.proxy.tls.certResolver=cloudflare"
      - "traefik.http.routers.proxy.tls.domains[0].main=$TRAEFIK_DOMAIN"
      - "traefik.http.routers.proxy.tls.domains[0].sans=*.$TRAEFIK_DOMAIN"
      - "traefik.http.routers.proxy.entrypoints=https"
      - "traefik.http.routers.proxy.service=api@internal"
      - "traefik.http.routers.proxy.middlewares=auth,secure@file,def-compress,strip"
      - "traefik.http.routers.proxy.tls=true"
      - "providers.file.filename=/etc/traefik/config.yml"

  portainer:
    image: portainer/portainer-ce:2.13.1
    networks:
      shared:
      private:
      public:

    command: -H unix:///var/run/docker.sock
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - portainer_data:/data
    labels:
      # Frontend
      - "traefik.enable=true"
      - "traefik.docker.network=inverseproxy_shared"
      - "traefik.http.routers.frontend.rule=Host(`${TRAEFIK_MONITOR}`)"
      - "traefik.http.routers.frontend.entrypoints=https"
      - "traefik.http.services.frontend.loadbalancer.server.port=9000"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.routers.frontend.tls=true"
      - "traefik.http.routers.frontend.tls.certresolver=cloudflare"

  dockersocket:
    image: tecnativa/docker-socket-proxy
    privileged: true
    networks:
      private:
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      CONTAINERS: 1
      NETWORKS: 1
      SERVICES: 1
      SWARM: 1
      TASKS: 1
    restart: unless-stopped

networks:
  shared:
    internal: true
    driver_opts:
      encrypted: 1

  private:
    internal: true
    driver_opts:
      encrypted: 1

  public:

volumes:
  acme:
  portainer_data:
