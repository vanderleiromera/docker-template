name: test

on:
  pull_request:
  push:
    branches:
      - test
  workflow_dispatch:
    inputs:
      pytest_addopts:
        description:
          Extra options for pytest; use -vv for full details; see
          https://docs.pytest.org/en/latest/example/simple.html#how-to-change-command-line-options-defaults
        required: false

env:
  GITHUB_TOKEN: ${{ secrets.DOO_GITHUB_TOKEN }}
  LANG: "en_US.utf-8"
  LC_ALL: "en_US.utf-8"
  PIP_CACHE_DIR: ${{ github.workspace }}/.cache.~/pip
  PIPX_HOME: ${{ github.workspace }}/.cache.~/pipx
  POETRY_CACHE_DIR: ${{ github.workspace }}/.cache.~/pypoetry
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  PRE_COMMIT_HOME: ${{ github.workspace }}/.cache.~/pre-commit
  PYTEST_ADDOPTS: ${{ github.event.inputs.pytest_addopts }}
  PYTHONIOENCODING: "UTF-8"
  TEST_TAG: vanderleiromera/doodba14_odoo:test
  PGUSER: odoo
  PGPASSWORD: odoopassword
  PGDATABASE: prod
  PGHOST: db
  PGPORT: 5432
  POSTGRES_HOST_AUTH_METHOD: trust

jobs:
  data:
    runs-on: ubuntu-latest          
    services:
      db:
        image: ghcr.io/tecnativa/postgres-autoconf:13-alpine
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: odoopassword
          POSTGRES_DB: prod
        ports:
          - 5432:5432
        options:
          --health-cmd pg_isready --health-interval 10s --health-timeout 5s
          --health-retries 5
          
          
#    strategy:
#      matrix:
#        python-version:
#          - 3.7
#        odoo-version:
#          - 14.0
    steps:
      # Shared steps
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0Fetch all history for all tags and branches
          
      - name: QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Bump version and push tag
        id: tagging
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.DOO_GITHUB_TOKEN }}
          
#      - name: Install python
#        uses: actions/setup-python@v3
#        with:
#          python-version: ${{ matrix.python-version }}
#      - name: Generate cache key CACHE
#        run:
#          echo "CACHE=${{ secrets.CACHE_DATE }} ${{ runner.os }} $(python -VV |
#          sha256sum | cut -d' ' -f1) ${{ hashFiles('pyproject.toml') }} ${{
#          hashFiles('poetry.lock') }} ${{ hashFiles('.pre-commit-config.yaml') }}" >>
#          $GITHUB_ENV
          
      - uses: actions/cache@v3
        with:
          path: |
            .cache.~
            .venv
            ~/.local/bin
          key: venv ${{ env.CACHE }}
 #     - run: pip install poetry
      - name: Patch $PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
 #     - run: poetry install
      # Precreate shared networks to avoid race conditions
 #     - run: docker network create inverseproxy_shared
 #     - run: docker network create globalwhitelist_shared
      # Let tests issue git commits
      - run: git config --global user.name CI
      - run: git config --global user.email CI@GITHUB
      # Run all tests, which includes linters
      # Non concurrent first (in parallel)
      #  docker run --rm ${{ env.TEST_TAG }} odoo --stop-after-init -i base  
      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: ./odoo
          load: true
          build-args: ODOO_VERSION=14.0
          tags: ${{ env.TEST_TAG }}
          
      - name: Test
        run: |
          docker run --rm ${{ env.TEST_TAG }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./odoo
          file: ./odoo/Dockerfile
          platforms: linux/amd64
          tags: vanderleiromera/doodba14_odoo:${{ steps.tagging.outputs.new_version }}
          build-args: ODOO_VERSION=14.0
