name: test
on:
  push:
    branches:
      - devel
      - test
      
env:
  TEST_TAG: vanderleiromera/doodba14_odoo:test

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3

      - name: QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: .
          load: true
          tags: ${{ env.TEST_TAG }}
          
      - name: Test
        run: |
          docker-compose run --rm ${{ env.TEST_TAG }}

      - name: Bump version and push tag
        id: tagging
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.DOO_GITHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: false
          context: ./odoo
          file: ./odoo/Dockerfile
          platforms: linux/amd64
          tags: vanderleiromera/doodba14_odoo:${{ steps.tagging.outputs.new_version }}
          build-args: ODOO_VERSION=14.0
          
          
          
          
          
 #     - run: pip install poetry
  #    - name: Patch $PATH
   #     run: echo "$HOME/.local/bin" >> $GITHUB_PATH
    #  - run: poetry install
      # Precreate shared networks to avoid race conditions
     # - run: docker network create inverseproxy_shared
      #- run: docker network create globalwhitelist_shared
      # Let tests issue git commits
      #- run: git config --global user.name CI
      #- run: git config --global user.email CI@GITHUB
      # Run all tests, which includes linters
      # Non concurrent first (in parallel)
      #- run: poetry run invoke test
       # env:
        #  SELECTED_ODOO_VERSIONS: ${{ matrix.odoo-version }}
      # Concurrent tests (isolated)
     # - run: poetry run invoke test --sequential
      #  env:
       #   SELECTED_ODOO_VERSIONS: ${{ matrix.odoo-version }}
