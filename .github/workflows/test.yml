name: test

on:
  pull_request:
  push:
    branches:
      - test
      
env:
  GITHUB_TOKEN: ${{ secrets.DOO_GITHUB_TOKEN }}
  LANG: "en_US.utf-8"
  LC_ALL: "en_US.utf-8"
  PIP_CACHE_DIR: ${{ github.workspace }}/.cache.~/pip
  PIPX_HOME: ${{ github.workspace }}/.cache.~/pipx
  POETRY_CACHE_DIR: ${{ github.workspace }}/.cache.~/pypoetry
  POETRY_VIRTUALENVS_IN_PROJECT: "true"
  PRE_COMMIT_HOME: ${{ github.workspace }}/.cache.~/pre-commit
  PYTEST_ADDOPTS: ${{ github.event.inputs.pytest_addopts }}
  PYTHONIOENCODING: "UTF-8"
  TEST_TAG: vanderleiromera/doodba14_odoo:test
  PGPASSWORD: example-db-password
  POSTGRES_PASSWORD: example-db-password
  ADMIN_PASSWORD: example-admin-password
  POSTGRES_USER: odoo
  POSTGRES_DB: prod

jobs:
  test:
    runs-on: ubuntu-latest  
    
    services:
      postgres:
        image: ghcr.io/tecnativa/postgres-autoconf:13-alpine
        env:
          POSTGRES_USER: odoo
          POSTGRES_PASSWORD: example-db-password
          POSTGRES_DB: prod
        ports:
          - 5432:5432
    
    steps:
    # Shared steps
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0Fetch all history for all tags and branches
          
      - name: QEMU
        uses: docker/setup-qemu-action@v1

      - name: Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
          
      - name: Bump version and push tag
        id: tagging
        uses: mathieudutour/github-tag-action@v6.0
        with:
          github_token: ${{ secrets.DOO_GITHUB_TOKEN }}
          
      - name: Install python
      
      - name: Generate cache key CACHE
        run:
          echo "CACHE=${{ secrets.CACHE_DATE }} ${{ runner.os }} $(python -VV |
          sha256sum | cut -d' ' -f1) ${{ hashFiles('pyproject.toml') }} ${{
          hashFiles('poetry.lock') }} ${{ hashFiles('.pre-commit-config.yaml') }}" >>
          $GITHUB_ENV
          
      - uses: actions/cache@v3
        with:
          path: |
            .cache.~
            .venv
            ~/.local/bin
            key: venv ${{ env.CACHE }}
      - run: pip install poetry
      - name: Patch $PATH
        run: echo "$HOME/.local/bin" >> $GITHUB_PATH
          
      - name: Build and export to Docker
        uses: docker/build-push-action@v2
        with:
          context: ./odoo
          load: true
          build-args: ODOO_VERSION=14.0
          tags: ${{ env.TEST_TAG }}
          
      - name: Test
        run: |
          docker run --rm odoo --stop-after-init -i base ${{ env.TEST_TAG }}
          docker run --rm ${{ env.TEST_TAG }}
      
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./odoo
          file: ./odoo/Dockerfile
          platforms: linux/amd64
          tags: vanderleiromera/doodba14_odoo:${{ steps.tagging.outputs.new_version }}
          build-args: ODOO_VERSION=14.0
          
